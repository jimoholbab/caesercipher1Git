package com.olawale;
public class CaesarCipher {
    private final int ASCII_CODE = 26;
    private final int CHAR_SET = ASCII_CODE;
    String cipher(String message, int offset){
        StringBuilder result = new StringBuilder();
        for (char character : message.toCharArray()) {
            if (character != ' ') {
                if(character >= 'a' && character <= 'z') {
                    int originalAlphabetPosition = character - 'a';
                    int newAlphabetPosition = (originalAlphabetPosition + offset) % CHAR_SET;
                    char newCharacter = (char) ('a' + newAlphabetPosition);
                    result.append(newCharacter);
                }else if(character >= 'A' && character <= 'Z'){
                    int originalAlphabetPosition = character - 'A';
                    int newAlphabetPosition = (originalAlphabetPosition + offset) % CHAR_SET;
                    char newCharacter = (char) ('A' + newAlphabetPosition);
                    result.append(newCharacter);
                }else{
                    result.append(character);
                }
            } else {
                result.append(character);
            }
        }
        return result.toString();
    }

    String decipher(String message, int offset){
        return cipher(message, CHAR_SET - (offset % CHAR_SET));
    }
}
